name: Build Docker

on:
  workflow_dispatch:
    inputs:
      CLASH_VERSION:
        description: 'clash version (optional) - if omitted the latest release will be used'
        type: string
        required: false
  schedule:
    - cron: '0 0 * * 1'

jobs:

  Docker-Images:
    name: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Login To Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login To Alibaba Cloud Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWD }}

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine CLASH_VERSION
        id: determine_version
        run: |
          # Ensure jq is available (ubuntu runner uses apt)
          if ! command -v jq >/dev/null 2>&1; then sudo apt-get update && sudo apt-get install -y jq; fi
          # Manual dispatch with CLASH_VERSION specified uses the provided value
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.CLASH_VERSION }}" ]; then
            echo "version=${{ github.event.inputs.CLASH_VERSION }}" >> $GITHUB_OUTPUT
            echo "device=linux-amd64" >> $GITHUB_OUTPUT
          else
            # Scheduled run or manual without CLASH_VERSION: fetch latest release tag via GitHub API using token
            tag=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/MetaCubeX/mihomo/releases/latest | jq -r .tag_name)
            echo "version=$tag" >> $GITHUB_OUTPUT
            echo "device=linux-arm64" >> $GITHUB_OUTPUT
          fi

      - name: Build & Push Image
        uses: docker/build-push-action@v6
        env:
          CLASH_VERSION: ${{ steps.determine_version.outputs.version }}
        with:
          platforms: linux/amd64,linux/arm64
          build-args: |
            CLASH_VERSION=${{ steps.determine_version.outputs.version }}
          file: Dockerfile
          context: .
          push: true
          tags: |
            toringzhang/clash:latest
            toringzhang/clash:${{ steps.determine_version.outputs.device }}-${{ steps.determine_version.outputs.version }}
            registry.cn-hangzhou.aliyuncs.com/${{ secrets.ALIYUN_NAMESPACES }}/clash:latest
            registry.cn-hangzhou.aliyuncs.com/${{ secrets.ALIYUN_NAMESPACES }}/clash:${{ steps.determine_version.outputs.device }}-${{ steps.determine_version.outputs.version }}

